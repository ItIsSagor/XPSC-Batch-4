class Solution {
public:
    void fun(vector<int>& candidates, int k, vector<int>& v, vector<vector<int>>& ans, int target) {
        if (target == 0) {
            ans.push_back(v);
            return;
        }
        if (target < 0) {
            return;
        }
        for (int i = k; i < candidates.size(); i++) {
            if (i != k && candidates[i] == candidates[i - 1]) {
                continue;
            }
            v.push_back(candidates[i]);
            fun(candidates, i + 1, v, ans, target - candidates[i]);
            v.pop_back();
        }
    }
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        vector<vector<int>> ans;
        vector<int> v;
        sort(candidates.begin(), candidates.end());
        fun(candidates, 0, v, ans, target);
        return ans;
    }
};