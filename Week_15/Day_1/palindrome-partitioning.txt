class Solution {
public:
    bool isP(string& s, int l, int r) {
        while (l <= r) {
            if (s[l++] != s[r--]) {
                return false;
            }
        }
        return true;
    }
    
    void fun(int indx, vector<vector<string>>& ans, vector<string>& v, string& s, int n) {
        if (indx == n) {
            ans.push_back(v);
            return;
        }
        for (int i = indx; i < n; i++) {
            if (isP(s, indx, i)) {
                v.push_back(s.substr(indx, i - indx + 1));
                fun(i + 1, ans, v, s, n);
                v.pop_back();
            }
        }
    }
    
    vector<vector<string>> partition(string s) {
        vector<vector<string>> ans;
        vector<string> v;
        int n = s.size();
        fun(0, ans, v, s, n);
        return ans;
    }
};